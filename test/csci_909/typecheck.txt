(type pi double)
(define pi 3.14)

(type add [integer integer integer])
(define add (lambda [a b] (*prim+i a b)))

(type sum integer)
(define sum (add 1 2))

(type gen-num double)
(define gen-num (lambda [] 3.14))

(typeclass Num a
 (+ [a a a])
 (- [a a a])
 (* [a a a])
 (neg [a a]))

(typeclass-inst Num integer
 (type + [integer integer integer])
 (+ [x y] (*prim+i x y))

 (type - [integer integer integer])
 (- [x y] (*prim-i x y))
 
 (type * [integer integer integer])
 (* [x y] (*prim*i x y))
 
 (type neg [integer integer])
 (neg [x] (*prim*i -1 x)))

(type square-sum [a a a] [(Num a)])
(define square-sum (lambda [x y] (* (+ x y) (+ x y))))
