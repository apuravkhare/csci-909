(data (Maybe a) (Just [x] [a]) (Nothing))

(type hasValue [(Maybe a) boolean])
(define hasValue (lambda [v] (cond
                               (Just? v)    true
                               (Nothing? v) false)))

(type j (Maybe a))
(define j (Just 1))

(type n (Maybe a))
(define n (Nothing))

(hasValue (Just 1))

(hasValue (Nothing))